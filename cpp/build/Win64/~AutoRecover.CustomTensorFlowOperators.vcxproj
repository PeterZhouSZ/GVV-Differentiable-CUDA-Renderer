<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{9F49C84E-4F44-3860-B03A-25EF6A7E4C01}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>CustomTensorFlowOperators</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 10.2.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Z:\RTMPC\work\CudaRenderer\cpp\binaries\Win64\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CustomTensorFlowOperators.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">CustomTensorFlowOperators</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Z:\RTMPC\work\CudaRenderer\cpp\binaries\Win64\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CustomTensorFlowOperators.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">CustomTensorFlowOperators</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Z:\RTMPC\work\CudaRenderer\cpp\binaries\Win64\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CustomTensorFlowOperators.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">CustomTensorFlowOperators</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Z:\RTMPC\work\CudaRenderer\cpp\binaries\Win64\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CustomTensorFlowOperators.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">CustomTensorFlowOperators</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_GLIBCXX_USE_CXX11_ABI=0;NDEBUG;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR="Debug";CustomTensorFlowOperators_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;_GLIBCXX_USE_CXX11_ABI=0;NDEBUG;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR=\"Debug\";CustomTensorFlowOperators_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Defines>WIN32;_WINDOWS;NDEBUG;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR="Debug";CustomTensorFlowOperators_EXPORTS;%(Defines)</Defines>
      <AdditionalOptions>%(AdditionalOptions) -Xcompiler="-Zi -Ob0"</AdditionalOptions>
      <CodeGeneration>compute_61,sm_61</CodeGeneration>
      <Include>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(Include)</Include>
      <Optimization>Od</Optimization>
      <Runtime>MDd</Runtime>
      <RuntimeChecks>RTC1</RuntimeChecks>
      <TargetMachinePlatform>64</TargetMachinePlatform>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>D:\Anaconda3\Lib\site-packages\tensorflow\python\_pywrap_tensorflow_internal.lib;D:\Anaconda3\Lib\site-packages\tensorflow\python\_pywrap_tensorflow_internal.lib;cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>Z:/RTMPC/work/CudaRenderer/cpp/binaries/Win64/Debug/CustomTensorFlowOperators.lib</ImportLibrary>
      <ProgramDataBaseFile>Z:/RTMPC/work/CudaRenderer/cpp/binaries/Win64/Debug/CustomTensorFlowOperators.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-Wno-deprecated-gpu-targets</AdditionalOptions>
      <PerformDeviceLink>true</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_GLIBCXX_USE_CXX11_ABI=0;NDEBUG;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR="Release";CustomTensorFlowOperators_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_GLIBCXX_USE_CXX11_ABI=0;NDEBUG;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR=\"Release\";CustomTensorFlowOperators_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Defines>NDEBUG;WIN32;_WINDOWS;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR="Release";CustomTensorFlowOperators_EXPORTS;%(Defines)</Defines>
      <AdditionalOptions>%(AdditionalOptions) -Xcompiler=-Ob2</AdditionalOptions>
      <CodeGeneration>compute_61,sm_61</CodeGeneration>
      <Include>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(Include)</Include>
      <Optimization>O2</Optimization>
      <Runtime>MD</Runtime>
      <TargetMachinePlatform>64</TargetMachinePlatform>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>D:\Anaconda3\Lib\site-packages\tensorflow\python\_pywrap_tensorflow_internal.lib;D:\Anaconda3\Lib\site-packages\tensorflow\python\_pywrap_tensorflow_internal.lib;cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>Z:/RTMPC/work/CudaRenderer/cpp/binaries/Win64/Release/CustomTensorFlowOperators.lib</ImportLibrary>
      <ProgramDataBaseFile>Z:/RTMPC/work/CudaRenderer/cpp/binaries/Win64/Release/CustomTensorFlowOperators.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-Wno-deprecated-gpu-targets</AdditionalOptions>
      <PerformDeviceLink>true</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_GLIBCXX_USE_CXX11_ABI=0;NDEBUG;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR="MinSizeRel";CustomTensorFlowOperators_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_GLIBCXX_USE_CXX11_ABI=0;NDEBUG;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR=\"MinSizeRel\";CustomTensorFlowOperators_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Defines>NDEBUG;WIN32;_WINDOWS;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR="MinSizeRel";CustomTensorFlowOperators_EXPORTS;%(Defines)</Defines>
      <AdditionalOptions>%(AdditionalOptions) -Xcompiler=-Ob1</AdditionalOptions>
      <CodeGeneration>compute_61,sm_61</CodeGeneration>
      <Include>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(Include)</Include>
      <Optimization>O1</Optimization>
      <Runtime>MD</Runtime>
      <TargetMachinePlatform>64</TargetMachinePlatform>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>D:\Anaconda3\Lib\site-packages\tensorflow\python\_pywrap_tensorflow_internal.lib;D:\Anaconda3\Lib\site-packages\tensorflow\python\_pywrap_tensorflow_internal.lib;cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>Z:/RTMPC/work/CudaRenderer/cpp/binaries/Win64/MinSizeRel/CustomTensorFlowOperators.lib</ImportLibrary>
      <ProgramDataBaseFile>Z:/RTMPC/work/CudaRenderer/cpp/binaries/Win64/MinSizeRel/CustomTensorFlowOperators.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-Wno-deprecated-gpu-targets</AdditionalOptions>
      <PerformDeviceLink>true</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_GLIBCXX_USE_CXX11_ABI=0;NDEBUG;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR="RelWithDebInfo";CustomTensorFlowOperators_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_GLIBCXX_USE_CXX11_ABI=0;NDEBUG;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR=\"RelWithDebInfo\";CustomTensorFlowOperators_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <CudaCompile>
      <Defines>NDEBUG;WIN32;_WINDOWS;GOOGLE_CUDA;_USE_MATH_DEFINES;CMAKE_INTDIR="RelWithDebInfo";CustomTensorFlowOperators_EXPORTS;%(Defines)</Defines>
      <AdditionalOptions>%(AdditionalOptions) -Xcompiler="-Zi -Ob1"</AdditionalOptions>
      <CodeGeneration>compute_61,sm_61</CodeGeneration>
      <Include>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(Include)</Include>
      <Optimization>O2</Optimization>
      <Runtime>MD</Runtime>
      <TargetMachinePlatform>64</TargetMachinePlatform>
    </CudaCompile>
    <Midl>
      <AdditionalIncludeDirectories>Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\..\thirdParty\Shared\cutil\inc;D:\Anaconda3\Lib\site-packages\tensorflow\include;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\eigen_archive;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\com_google_absl;D:\Anaconda3\Lib\site-packages\tensorflow\include\external\protobuf_archive\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>D:\Anaconda3\Lib\site-packages\tensorflow\python\_pywrap_tensorflow_internal.lib;D:\Anaconda3\Lib\site-packages\tensorflow\python\_pywrap_tensorflow_internal.lib;cudart_static.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>Z:/RTMPC/work/CudaRenderer/cpp/binaries/Win64/RelWithDebInfo/CustomTensorFlowOperators.lib</ImportLibrary>
      <ProgramDataBaseFile>Z:/RTMPC/work/CudaRenderer/cpp/binaries/Win64/RelWithDebInfo/CustomTensorFlowOperators.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <CudaLink>
      <AdditionalOptions>-Wno-deprecated-gpu-targets</AdditionalOptions>
      <PerformDeviceLink>true</PerformDeviceLink>
    </CudaLink>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule Z:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\CMake\bin\cmake.exe -HZ:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows -BZ:/RTMPC/work/CudaRenderer/cpp/build/Win64 --check-stamp-file Z:/RTMPC/work/CudaRenderer/cpp/build/Win64/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Z:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows/CMakeLists.txt;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\CMakeLists.txt;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineSystem.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystem.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeSystem.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-Determine-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GNU-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\HP-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\XL-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\zOS-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeRCCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompilerABI.cpp;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompileFeatures.cmake;D:\CMake\share\cmake-3.10\Modules\Internal\FeatureTesting.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX-FeatureTests.cmake;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\feature_tests.cxx;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDAInformation.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-CUDA.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompilerABI.cu;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCUDACompiler.cmake;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule Z:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\CMake\bin\cmake.exe -HZ:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows -BZ:/RTMPC/work/CudaRenderer/cpp/build/Win64 --check-stamp-file Z:/RTMPC/work/CudaRenderer/cpp/build/Win64/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Z:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows/CMakeLists.txt;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\CMakeLists.txt;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineSystem.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystem.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeSystem.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-Determine-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GNU-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\HP-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\XL-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\zOS-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeRCCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompilerABI.cpp;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompileFeatures.cmake;D:\CMake\share\cmake-3.10\Modules\Internal\FeatureTesting.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX-FeatureTests.cmake;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\feature_tests.cxx;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDAInformation.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-CUDA.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompilerABI.cu;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCUDACompiler.cmake;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule Z:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\CMake\bin\cmake.exe -HZ:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows -BZ:/RTMPC/work/CudaRenderer/cpp/build/Win64 --check-stamp-file Z:/RTMPC/work/CudaRenderer/cpp/build/Win64/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Z:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows/CMakeLists.txt;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\CMakeLists.txt;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineSystem.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystem.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeSystem.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-Determine-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GNU-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\HP-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\XL-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\zOS-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeRCCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompilerABI.cpp;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompileFeatures.cmake;D:\CMake\share\cmake-3.10\Modules\Internal\FeatureTesting.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX-FeatureTests.cmake;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\feature_tests.cxx;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDAInformation.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-CUDA.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompilerABI.cu;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCUDACompiler.cmake;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule Z:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\CMake\bin\cmake.exe -HZ:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows -BZ:/RTMPC/work/CudaRenderer/cpp/build/Win64 --check-stamp-file Z:/RTMPC/work/CudaRenderer/cpp/build/Win64/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Z:/RTMPC/work/CudaRenderer/cpp/cmakeTF2Windows/CMakeLists.txt;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\CMakeLists.txt;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineSystem.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystem.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeSystem.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-Determine-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Comeau-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\GNU-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\HP-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MIPSpro-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\XL-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\zOS-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.10\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.10\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeRCCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestRCCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompilerABI.cpp;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompileFeatures.cmake;D:\CMake\share\cmake-3.10\Modules\Internal\FeatureTesting.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\MSVC-CXX-FeatureTests.cmake;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\feature_tests.cxx;D:\CMake\share\cmake-3.10\Modules\CMakeCXXCompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCXXCompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDAInformation.cmake;D:\CMake\share\cmake-3.10\Modules\Compiler\NVIDIA-CUDA.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\CMake\share\cmake-3.10\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCUDACompiler.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompilerABI.cu;D:\CMake\share\cmake-3.10\Modules\CMakeCUDACompiler.cmake.in;Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\3.10.1\CMakeCUDACompiler.cmake;Z:\RTMPC\work\CudaRenderer\cpp\cmakeTF2Windows\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\src\TensorflowOperators\CudaRenderer\CudaRendererGrad.cpp" />
    <ClCompile Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\StringProcessing.cpp" />
    <ClInclude Include="..\..\src\TensorflowOperators\CudaRenderer\CudaRendererGrad.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\CameraUtil.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\IndexHelper.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\MathConstants.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\StringProcessing.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\cudaUtil.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\cuda_SimpleMatrixUtil.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float1x2.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float1x3.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float1x4.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float2x1.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float2x2.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float2x3.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float2x4.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float3x1.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float3x2.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float3x3.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float3x4.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float4x1.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float4x2.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float4x3.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Utils\float4x4.h" />
    <ClCompile Include="Z:\RTMPC\work\CudaRenderer\cpp\src\TensorflowOperators\CudaRenderer\CudaRenderer.cpp" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\TensorflowOperators\CudaRenderer\CudaRenderer.h" />
    <ClCompile Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Camera\camera.cpp" />
    <ClCompile Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Camera\camera_container.cpp" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Camera\camera.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Camera\camera_container.h" />
    <ClCompile Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Color\color.cpp" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Color\color.h" />
    <ClCompile Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Mesh\CUDABasedRasterization.cpp">
      <ObjectFileName>$(IntDir)/Z_/RTMPC/work/CudaRenderer/cpp/src/Renderer/Mesh/CUDABasedRasterization.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClCompile Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Mesh\trimesh.cpp">
      <ObjectFileName>$(IntDir)/Z_/RTMPC/work/CudaRenderer/cpp/src/Renderer/Mesh/trimesh.cpp.obj</ObjectFileName>
    </ClCompile>
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Mesh\CUDABasedRasterization.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Mesh\CUDABasedRasterizationInput.h" />
    <ClInclude Include="Z:\RTMPC\work\CudaRenderer\cpp\src\Renderer\Mesh\trimesh.h" />
    <CudaCompile Include="..\..\src\Renderer\Mesh\CUDABasedRasterization.cu">
      <ObjectFileName>$(IntDir)/Z_/RTMPC/work/CudaRenderer/cpp/src/Renderer/Mesh/CUDABasedRasterization.cu.obj</ObjectFileName>
    </CudaCompile>
    <CudaCompile Include="..\..\src\Renderer\Mesh\trimesh.cu">
      <ObjectFileName>$(IntDir)/Z_/RTMPC/work/CudaRenderer/cpp/src/Renderer/Mesh/trimesh.cu.obj</ObjectFileName>
    </CudaCompile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="Z:\RTMPC\work\CudaRenderer\cpp\build\Win64\ZERO_CHECK.vcxproj">
      <Project>{9D74DE9E-F049-39BB-A2D0-8AD711C8B3CE}</Project>
      <Name>ZERO_CHECK</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 10.2.targets" />
  </ImportGroup>
</Project>